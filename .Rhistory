simplex_output
X <- as.data.frame(data_ts)[,i]
simplex_output<-simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i,"emax"] , silent = T)
pred <- simplex(time_series = X, E = embed_max[i,"emax"], stats_only = FALSE)
pred
fits <- pred$model_output[[1]]
head(fits)
i = 5
colnames(data_ts)[i]
X <- as.data.frame(data_ts)[,i]
simplex_output<-simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i,"emax"] , silent = T)
pred <- simplex(time_series = X, E = embed_max[i,"emax"], stats_only = FALSE)
fits <- pred$model_output[[1]]
head(fits)
colnames(data_ts)[i]
plot(pred ~ time, data = fits, type = "l", col = "blue", lwd=3,
xlab="Time", ylab="X", ylim=range(fits[,2:3]))
lines(obs ~ time, data = fits, col=grey.colors(1, alpha=0.25), lwd = 6)
legend("topright", c("Observed", "Predicted"), lty=1, lwd=c(6,3),
col=c(grey.colors(1, alpha=0.25), "blue"),bty="n")
range(fits[,2:3])
str(fits)
str(fits[,2:3])
range(fits[,2:3])
range(fits[,2])
?range
range(fits[,2:3],na.rm = T)
plot(pred ~ time, data = fits, type = "l", col = "blue", lwd=3,
xlab="Time", ylab="X", ylim=range(fits[,2:3],na.rm = T))
lines(obs ~ time, data = fits, col=grey.colors(1, alpha=0.25), lwd = 6)
legend("topright", c("Observed", "Predicted"), lty=1, lwd=c(6,3),
col=c(grey.colors(1, alpha=0.25), "blue"),bty="n")
simplex_output<-simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i,"emax"] , silent = T)
pred <- simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i,"emax"], silent = T)
plot(pred ~ time, data = fits, type = "l", col = "blue", lwd=3,
xlab="Time", ylab="X", ylim=range(fits[,2:3],na.rm = T))
lines(obs ~ time, data = fits, col=grey.colors(1, alpha=0.25), lwd = 6)
legend("topright", c("Observed", "Predicted"), lty=1, lwd=c(6,3),
col=c(grey.colors(1, alpha=0.25), "blue"),bty="n")
dev.off()
dev.off()
X <- as.data.frame(data_ts)[,i]
pred <- simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i,"emax"], silent = T)
fits <- pred$model_output[[1]]
head(fits)
pred
pred <- simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i,"emax"], stats_only = FALSE)
fits <- pred$model_output[[1]]
head(fits)
pred <- simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i,"emax"], stats_only = FALSE)
# pred <- simplex(time_series = X, E = embed_max[i,"emax"], stats_only = FALSE)
fits <- pred$model_output[[1]]
head(fits)
plot(pred ~ time, data = fits, type = "l", col = "blue", lwd=3,
xlab="Time", ylab="X", ylim=range(fits[,2:3],na.rm = T))
lines(obs ~ time, data = fits, col=grey.colors(1, alpha=0.25), lwd = 6)
legend("topright", c("Observed", "Predicted"), lty=1, lwd=c(6,3),
col=c(grey.colors(1, alpha=0.25), "blue"),bty="n")
model_output
pred$model_output
fits[,2:3]
dev.off()
dev.off()
plot(pred ~ time, data = fits, type = "l", col = "blue", lwd=3,
xlab="Time", ylab="X", ylim=range(fits[,2:3],na.rm = T))
lines(obs ~ time, data = fits, col=grey.colors(1, alpha=0.25), lwd = 6)
legend("topright", c("Observed", "Predicted"), lty=1, lwd=c(6,3),
col=c(grey.colors(1, alpha=0.25), "blue"),bty="n")
range(fits$time)
pred$rho
embed_max[i,"emax"]
colnames(data_ts)[i]
Emb1<-data.frame()
sp<-colnames(data_ts)
i
nome<-sp[i]
lib<-c(1, NROW(data_ts[,i]))
pred<-lib
simplex_output<-simplex(as.data.frame(data_ts)[,i], lib = lib, pred = pred, E = 1:emb_dim, silent = T)
emax<-which.max(simplex_output$rho)
emb_dim=20
nome<-sp[i]
lib<-c(1, NROW(data_ts[,i]))
pred<-lib
simplex_output<-simplex(as.data.frame(data_ts)[,i], lib = lib, pred = pred, E = 1:emb_dim, silent = T)
emax<-which.max(simplex_output$rho)
emax
Emb1[i,"variable"]<-nome
Emb1[i,"emax"]<-emax
Emb1
embed_max
embed_max[i-1,"emax"]
pred <- simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i-1,"emax"], stats_only = FALSE)
fits <- pred$model_output[[1]]
head(fits)
plot(pred ~ time, data = fits, type = "l", col = "blue", lwd=3,
xlab="Time", ylab="X", ylim=range(fits[,2:3],na.rm = T))
lines(obs ~ time, data = fits, col=grey.colors(1, alpha=0.25), lwd = 6)
legend("topright", c("Observed", "Predicted"), lty=1, lwd=c(6,3),
col=c(grey.colors(1, alpha=0.25), "blue"),bty="n")
pred$rho
pred <- simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = 2, stats_only = FALSE)
# pred <- simplex(time_series = X, E = embed_max[i,"emax"], stats_only = FALSE)
fits <- pred$model_output[[1]]
head(fits)
plot(pred ~ time, data = fits, type = "l", col = "blue", lwd=3,
xlab="Time", ylab="X", ylim=range(fits[,2:3],na.rm = T))
lines(obs ~ time, data = fits, col=grey.colors(1, alpha=0.25), lwd = 6)
legend("topright", c("Observed", "Predicted"), lty=1, lwd=c(6,3),
col=c(grey.colors(1, alpha=0.25), "blue"),bty="n")
pred$rho
i = 16
colnames(data_ts)[i]
X <- as.data.frame(data_ts)[,i]
pred <- simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i-1,"emax"], stats_only = FALSE)
# pred <- simplex(time_series = X, E = embed_max[i,"emax"], stats_only = FALSE)
fits <- pred$model_output[[1]]
head(fits)
plot(pred ~ time, data = fits, type = "l", col = "blue", lwd=3,
xlab="Time", ylab="X", ylim=range(fits[,2:3],na.rm = T))
lines(obs ~ time, data = fits, col=grey.colors(1, alpha=0.25), lwd = 6)
legend("topright", c("Observed", "Predicted"), lty=1, lwd=c(6,3),
col=c(grey.colors(1, alpha=0.25), "blue"),bty="n")
pred$rho
i = 10
colnames(data_ts)[i]
X <- as.data.frame(data_ts)[,i]
pred <- simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i-1,"emax"], stats_only = FALSE)
# pred <- simplex(time_series = X, E = embed_max[i,"emax"], stats_only = FALSE)
fits <- pred$model_output[[1]]
head(fits)
plot(pred ~ time, data = fits, type = "l", col = "blue", lwd=3,
xlab="Time", ylab="X", ylim=range(fits[,2:3],na.rm = T))
lines(obs ~ time, data = fits, col=grey.colors(1, alpha=0.25), lwd = 6)
legend("topright", c("Observed", "Predicted"), lty=1, lwd=c(6,3),
col=c(grey.colors(1, alpha=0.25), "blue"),bty="n")
pred$rho
# Simplex
i = 10
X <- as.data.frame(data_ts)[,i]
pred <- simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i-1,"emax"], stats_only = FALSE)
# pred <- simplex(time_series = X, E = embed_max[i,"emax"], stats_only = FALSE)
fits <- pred$model_output[[1]]
head(fits)
plot(pred ~ time, data = fits, type = "l", col = "blue", lwd=3,
xlab="Time", ylab="X", ylim=range(fits[,2:3],na.rm = T))
lines(obs ~ time, data = fits, col=grey.colors(1, alpha=0.25), lwd = 6)
legend("topright", c("Observed", "Predicted"), lty=1, lwd=c(6,3),
col=c(grey.colors(1, alpha=0.25), "blue"),bty="n")
colnames(data_ts)[i]
pred$rho
print(colnames(data_ts)[i];pred$rho)
print(colnames(data_ts)[i],pred$rho)
print(paste(colnames(data_ts)[i],pred$rho))
print(paste(colnames(data_ts)[i], round(pred$rho,3)))
print(paste(colnames(data_ts)[i], round(pred$rho,3)))
print(paste("Max Emb",embed_max[i-1,"emax"]))
plot(pred ~ time, data = fits, type = "l", col = "blue", lwd=3,
xlab="Time", ylab=colnames(data_ts)[i], ylim=range(fits[,2:3],na.rm = T))
lines(obs ~ time, data = fits, col=grey.colors(1, alpha=0.25), lwd = 6)
legend("topright", c("Observed", "Predicted"), lty=1, lwd=c(6,3),
col=c(grey.colors(1, alpha=0.25), "blue"),bty="n")
X <- as.data.frame(data_ts)[,i]
pred <- simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i-1,"emax"], stats_only = FALSE, silent = T)
fits <- pred$model_output[[1]]
# head(fits)
savename<-paste("output/",trap_name,"/simplex_plots/",colnames(data_ts)[i], "_simplex.png",sep="")
png(savename, width = 800, height = 500)
plot(pred ~ time, data = fits, type = "l", col = "blue", lwd=3,
xlab="Time", ylab=colnames(data_ts)[i], ylim=range(fits[,2:3],na.rm = T))
lines(obs ~ time, data = fits, col=grey.colors(1, alpha=0.25), lwd = 6)
legend("topright", c("Observed", "Predicted"), lty=1, lwd=c(6,3),
col=c(grey.colors(1, alpha=0.25), "blue"),bty="n")
dev.off()
rho_df <- data.frame()
for (i in 2:ncol(data_ts)){
X <- as.data.frame(data_ts)[,i]
pred <- simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i-1,"emax"], stats_only = FALSE, silent = T)
fits <- pred$model_output[[1]]
# head(fits)
rho_df[i,"variable"] <- colnames(data_ts)[i]
rho_df[i,"rho"] <- round(pred$rho,3)
rho_df[i,"emax"] <- embed_max[i-1,"emax"]
savename<-paste("output/",trap_name,"/simplex_plots/",colnames(data_ts)[i], "_simplex.png",sep="")
png(savename, width = 800, height = 500)
plot(pred ~ time, data = fits, type = "l", col = "blue", lwd=3,
xlab="Time", ylab=colnames(data_ts)[i], ylim=range(fits[,2:3],na.rm = T))
lines(obs ~ time, data = fits, col=grey.colors(1, alpha=0.25), lwd = 6)
legend("topright", c("Observed", "Predicted"), lty=1, lwd=c(6,3),
col=c(grey.colors(1, alpha=0.25), "blue"),bty="n")
dev.off()
}
rho_df
rho_df <- rho_df[-1,]
rho_df
i = 5
pred.decay <- simplex(time_series = as.data.frame(data_ts)[,5], E = 3, tp = 1:20)
plot(rho ~ tp, data=pred.decay,
type = "b",
xlab = "Time to prediction",
ylab = expression(paste("Forecast skill (",rho,")",sep="")))
pred.decay <- simplex(time_series = as.data.frame(data_ts)[,i], E = embed_max[i-1,"emax"], tp = 1:20)
plot(rho ~ tp, data=pred.decay,
type = "b",
xlab = "Time to prediction",
ylab = expression(paste("Forecast skill (",rho,")",sep="")))
vignette("rEDM-tutorial", package="rEDM")
for (i in 2:ncol(data_ts)){
X <- as.data.frame(data_ts)[,i]
pred <- simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i-1,"emax"], stats_only = FALSE, silent = T)
fits <- pred$model_output[[1]]
# head(fits)
rho_df[i,"variable"] <- colnames(data_ts)[i]
rho_df[i,"rho"] <- round(pred$rho,3)
rho_df[i,"emax"] <- embed_max[i-1,"emax"]
savename1<-paste("output/",trap_name,"/simplex_plots/",colnames(data_ts)[i], "_simplex.png",sep="")
png(savename1, width = 800, height = 500)
plot(pred ~ time, data = fits, type = "l", col = "blue", lwd=3,
xlab="Time", ylab=colnames(data_ts)[i], ylim=range(fits[,2:3],na.rm = T))
lines(obs ~ time, data = fits, col=grey.colors(1, alpha=0.25), lwd = 6)
legend("topright", c("Observed", "Predicted"), lty=1, lwd=c(6,3),
col=c(grey.colors(1, alpha=0.25), "blue"),bty="n")
dev.off()
pred.decay <- simplex(time_series = as.data.frame(data_ts)[,i], E = embed_max[i-1,"emax"], tp = 1:20)
savename2<-paste("output/",trap_name,"/simplex_plots/",colnames(data_ts)[i], "_decay.png",sep="")
png(savename2, width = 800, height = 600)
plot(rho ~ tp, data=pred.decay,
type = "b",
xlab = "Time to prediction",
ylab = expression(paste("Forecast skill (",rho,")",sep="")))
dev.off()
}
rho_df <- rho_df[-1,]
rho_df
names(pred)
names(pred.decay)
?simplex
i
pred.decay <- simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i-1,"emax"], tp = 1:20,stats_only = FALSE, silent = T)
png(savename2, width = 800, height = 600)
plot(rho ~ tp, data=pred.decay,
type = "b",
xlab = "Time to prediction",
ylab = expression(paste("Forecast skill (",rho,")",sep="")))
dev.off()
plot(rho ~ tp, data=pred.decay,
type = "b",
xlab = "Time to prediction",
ylab = expression(paste("Forecast skill (",rho,")",sep="")))
names(pred)
names(pred.decay)
str(pred)
str(pred.decay)
# Simplex
rho_df <- data.frame()
for (i in 2:ncol(data_ts)){
X <- as.data.frame(data_ts)[,i]
pred <- simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i-1,"emax"], tp = 1:20, stats_only = FALSE, silent = T)
fits <- pred$model_output[[1]]
# head(fits)
rho_df[i,"variable"] <- colnames(data_ts)[i]
rho_df[i,"rho"] <- round(pred$rho,3)
rho_df[i,"emax"] <- embed_max[i-1,"emax"]
savename1<-paste("output/",trap_name,"/simplex_plots/",colnames(data_ts)[i], "_simplex.png",sep="")
png(savename1, width = 800, height = 500)
plot(pred ~ time, data = fits, type = "l", col = "blue", lwd=3,
xlab="Time", ylab=colnames(data_ts)[i], ylim=range(fits[,2:3],na.rm = T))
lines(obs ~ time, data = fits, col=grey.colors(1, alpha=0.25), lwd = 6)
legend("topright", c("Observed", "Predicted"), lty=1, lwd=c(6,3),
col=c(grey.colors(1, alpha=0.25), "blue"),bty="n")
dev.off()
savename2<-paste("output/",trap_name,"/simplex_plots/",colnames(data_ts)[i], "_decay.png",sep="")
png(savename2, width = 800, height = 600)
plot(rho ~ tp, data=pred.decay,
type = "b",
xlab = "Time to prediction",
ylab = expression(paste("Forecast skill (",rho,")",sep="")))
dev.off()
}
rho_df <- rho_df[-1,]
rho_df
i
X <- as.data.frame(data_ts)[,i]
pred <- simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i-1,"emax"], tp = 1:20, stats_only = FALSE, silent = T)
fits <- pred$model_output[[1]]
rho_df[i,"variable"] <- colnames(data_ts)[i]
rho_df <- data.frame()
X <- as.data.frame(data_ts)[,i]
pred <- simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i-1,"emax"], tp = 1:20, stats_only = FALSE, silent = T)
fits <- pred$model_output[[1]]
rho_df[i,"variable"] <- colnames(data_ts)[i]
rho_df[i,"rho"] <- round(pred$rho,3)
rho_df
round(pred$rho,3)
rho_df[i,"rho"] <- round(pred$rho[1],3)
rho_df[i,"emax"] <- embed_max[i-1,"emax"]
plot(pred ~ time, data = fits, type = "l", col = "blue", lwd=3,
xlab="Time", ylab=colnames(data_ts)[i], ylim=range(fits[,2:3],na.rm = T))
lines(obs ~ time, data = fits, col=grey.colors(1, alpha=0.25), lwd = 6)
legend("topright", c("Observed", "Predicted"), lty=1, lwd=c(6,3),
col=c(grey.colors(1, alpha=0.25), "blue"),bty="n")
png(savename2, width = 800, height = 600)
plot(rho ~ tp, data=pred.decay,
type = "b",
xlab = "Time to prediction",
ylab = expression(paste("Forecast skill (",rho,")",sep="")))
dev.off()
dev.off()
plot(rho ~ tp, data=pred.decay,
type = "b",
xlab = "Time to prediction",
ylab = expression(paste("Forecast skill (",rho,")",sep="")))
rho_df <- data.frame()
for (i in 2:ncol(data_ts)){
X <- as.data.frame(data_ts)[,i]
pred <- simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i-1,"emax"], tp = 1:20, stats_only = FALSE, silent = T)
fits <- pred$model_output[[1]]
# head(fits)
rho_df[i,"variable"] <- colnames(data_ts)[i]
rho_df[i,"rho"] <- round(pred$rho[1],3)
rho_df[i,"emax"] <- embed_max[i-1,"emax"]
savename1<-paste("output/",trap_name,"/simplex_plots/",colnames(data_ts)[i], "_simplex.png",sep="")
png(savename1, width = 800, height = 500)
plot(pred ~ time, data = fits, type = "l", col = "blue", lwd=3,
xlab="Time", ylab=colnames(data_ts)[i], ylim=range(fits[,2:3],na.rm = T))
lines(obs ~ time, data = fits, col=grey.colors(1, alpha=0.25), lwd = 6)
legend("topright", c("Observed", "Predicted"), lty=1, lwd=c(6,3),
col=c(grey.colors(1, alpha=0.25), "blue"),bty="n")
dev.off()
savename2<-paste("output/",trap_name,"/simplex_plots/",colnames(data_ts)[i], "_decay.png",sep="")
png(savename2, width = 800, height = 600)
plot(rho ~ tp, data=pred.decay,
type = "b",
xlab = "Time to prediction",
ylab = expression(paste("Forecast skill (",rho,")",sep="")))
dev.off()
}
rho_df <- rho_df[-1,]
rho_df
# Simplex
rho_df <- data.frame()
if (!file.exists(paste("output/",trap_name,"/simplex_pred_plots",sep=""))){ dir.create(paste("output/",trap_name,"/simplex_pred_plots/",sep="")) }
for (i in 2:ncol(data_ts)){
X <- as.data.frame(data_ts)[,i]
pred <- simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i-1,"emax"], tp = 1:20, stats_only = FALSE, silent = T)
fits <- pred$model_output[[1]]
# head(fits)
rho_df[i,"variable"] <- colnames(data_ts)[i]
rho_df[i,"rho"] <- round(pred$rho[1],3)
rho_df[i,"emax"] <- embed_max[i-1,"emax"]
savename1<-paste("output/",trap_name,"/simplex_pred_plots/",colnames(data_ts)[i], "_prediction.png",sep="")
png(savename1, width = 800, height = 500)
plot(pred ~ time, data = fits, type = "l", col = "blue", lwd=3,
xlab="Time", ylab=colnames(data_ts)[i], ylim=range(fits[,2:3],na.rm = T))
lines(obs ~ time, data = fits, col=grey.colors(1, alpha=0.25), lwd = 6)
legend("topright", c("Observed", "Predicted"), lty=1, lwd=c(6,3),
col=c(grey.colors(1, alpha=0.25), "blue"),bty="n")
dev.off()
savename2<-paste("output/",trap_name,"/simplex_pred_plots/",colnames(data_ts)[i], "_decay.png",sep="")
png(savename2, width = 800, height = 600)
plot(rho ~ tp, data=pred.decay,
type = "b",
xlab = "Time to prediction",
ylab = expression(paste("Forecast skill (",rho,")",sep="")))
dev.off()
}
rho_df <- rho_df[-1,]
rho_df
embed_max <- embed_plot(data_ts, emb_dim = 20, trap_name, overwrite =T)
sourceDirectory("./R/aux_functions", modifiedOnly=FALSE)
embed_max <- embed_plot(data_ts, emb_dim = 20, trap_name, overwrite =T)
# Simplex
rho_df <- data.frame()
if (!file.exists(paste("output/",trap_name,"/simplex_pred_plots",sep=""))){ dir.create(paste("output/",trap_name,"/simplex_pred_plots/",sep="")) }
for (i in 2:ncol(data_ts)){
X <- as.data.frame(data_ts)[,i]
pred <- simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i-1,"emax"], tp = 1:20, stats_only = FALSE, silent = T)
fits <- pred$model_output[[1]]
# head(fits)
rho_df[i,"variable"] <- colnames(data_ts)[i]
rho_df[i,"rho"] <- round(pred$rho[1],3)
rho_df[i,"emax"] <- embed_max[i-1,"emax"]
savename1<-paste("output/",trap_name,"/simplex_pred_plots/",colnames(data_ts)[i], "_prediction.png",sep="")
png(savename1, width = 800, height = 500)
plot(pred ~ time, data = fits, type = "l", col = "blue", lwd=3,
xlab="Time", ylab=colnames(data_ts)[i], ylim=range(fits[,2:3],na.rm = T))
lines(obs ~ time, data = fits, col=grey.colors(1, alpha=0.25), lwd = 6)
legend("topright", c("Observed", "Predicted"), lty=1, lwd=c(6,3),
col=c(grey.colors(1, alpha=0.25), "blue"),bty="n")
dev.off()
savename2<-paste("output/",trap_name,"/simplex_pred_plots/",colnames(data_ts)[i], "_decay.png",sep="")
png(savename2, width = 800, height = 600)
plot(rho ~ tp, data=pred.decay,
type = "b",
xlab = "Time to prediction",
ylab = expression(paste("Forecast skill (",rho,")",sep="")))
dev.off()
}
rho_df <- rho_df[-1,]
rho_df
# Simplex
rho_df <- data.frame()
if (!file.exists(paste("output/",trap_name,"/simplex_pred_plots",sep=""))){ dir.create(paste("output/",trap_name,"/simplex_pred_plots/",sep="")) }
for (i in 2:ncol(data_ts)){
X <- as.data.frame(data_ts)[,i]
pred <- simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i-1,"emax"], tp = 1:20, stats_only = FALSE, silent = T)
fits <- pred$model_output[[1]]
# head(fits)
rho_df[i,"variable"] <- colnames(data_ts)[i]
rho_df[i,"rho"] <- round(pred$rho[1],3)
rho_df[i,"emax"] <- embed_max[i-1,"emax"]
savename1<-paste("output/",trap_name,"/simplex_pred_plots/",colnames(data_ts)[i], "_prediction.png",sep="")
png(savename1, width = 800, height = 500)
plot(pred ~ time, data = fits, type = "l", col = "blue", lwd=3,
xlab="Time", ylab=colnames(data_ts)[i], ylim=range(fits[,2:3],na.rm = T))
lines(obs ~ time, data = fits, col=grey.colors(1, alpha=0.25), lwd = 6)
legend("topright", c("Observed", "Predicted"), lty=1, lwd=c(6,3),
col=c(grey.colors(1, alpha=0.25), "blue"),bty="n")
dev.off()
savename2<-paste("output/",trap_name,"/simplex_pred_plots/pred_decay_",colnames(data_ts)[i], ".png",sep="")
png(savename2, width = 800, height = 600)
plot(rho ~ tp, data=pred.decay,
type = "b",
xlab = "Time to prediction",
ylab = expression(paste("Forecast skill (",rho,")",sep="")))
dev.off()
}
rho_df <- rho_df[-1,]
rho_df
# Simplex
rho_df <- data.frame()
if (!file.exists(paste("output/",trap_name,"/simplex_pred_plots",sep=""))){ dir.create(paste("output/",trap_name,"/simplex_pred_plots/",sep="")) }
for (i in 2:ncol(data_ts)){
X <- as.data.frame(data_ts)[,i]
pred <- simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i-1,"emax"], tp = 1:20, stats_only = FALSE, silent = T)
fits <- pred$model_output[[1]]
# head(fits)
rho_df[i,"variable"] <- colnames(data_ts)[i]
rho_df[i,"rho"] <- round(pred$rho[1],3)
rho_df[i,"emax"] <- embed_max[i-1,"emax"]
savename1<-paste("output/",trap_name,"/simplex_pred_plots/",colnames(data_ts)[i], "_prediction.png",sep="")
png(savename1, width = 800, height = 500)
plot(pred ~ time, data = fits, type = "l", col = "blue", lwd=3,
xlab="Time", ylab=colnames(data_ts)[i], ylim=range(fits[,2:3],na.rm = T))
lines(obs ~ time, data = fits, col=grey.colors(1, alpha=0.25), lwd = 6)
legend("topright", c("Observed", "Predicted"), lty=1, lwd=c(6,3),
col=c(grey.colors(1, alpha=0.25), "blue"),bty="n")
dev.off()
savename2<-paste("output/",trap_name,"/simplex_pred_plots/pred_decay_",colnames(data_ts)[i], ".png",sep="")
png(savename2, width = 800, height = 600)
plot(rho ~ tp, data=pred,
type = "b",
xlab = "Time to prediction",
ylab = expression(paste("Forecast skill (",rho,")",sep="")))
dev.off()
}
rho_df <- rho_df[-1,]
# Simplex
rho_df <- data.frame()
if (!file.exists(paste("output/",trap_name,"/simplex_pred_plots",sep=""))){ dir.create(paste("output/",trap_name,"/simplex_pred_plots/",sep="")) }
for (i in 2:ncol(data_ts)){
X <- as.data.frame(data_ts)[,i]
pred <- simplex(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i-1,"emax"], tp = 1:20, stats_only = FALSE, silent = T)
fits <- pred$model_output[[1]]
# head(fits)
rho_df[i,"variable"] <- colnames(data_ts)[i]
rho_df[i,"rho"] <- round(pred$rho[1],3)
rho_df[i,"emax"] <- embed_max[i-1,"emax"]
savename1<-paste("output/",trap_name,"/simplex_pred_plots/",colnames(data_ts)[i], "_prediction.png",sep="")
png(savename1, width = 800, height = 500)
plot(pred ~ time, data = fits, type = "l", col = "blue", lwd=3,
xlab="Time", ylab=colnames(data_ts)[i], ylim=range(fits[,2:3],na.rm = T))
lines(obs ~ time, data = fits, col=grey.colors(1, alpha=0.25), lwd = 6)
legend("topright", c("Observed", "Predicted"), lty=1, lwd=c(6,3),
col=c(grey.colors(1, alpha=0.25), "blue"),bty="n")
dev.off()
savename2<-paste("output/",trap_name,"/simplex_pred_plots/decay_",colnames(data_ts)[i], ".png",sep="")
png(savename2, width = 800, height = 600)
plot(rho ~ tp, data=pred,
type = "b",
xlab = "Time to prediction",
ylab = expression(paste("Forecast skill (",rho,")",sep="")))
dev.off()
}
rho_df <- rho_df[-1,]
rho_df
sourceDirectory("./R/aux_functions", modifiedOnly=FALSE)
simplex_plot(data_ts, embed_max, trap_name, overwrite = T)
sourceDirectory("./R/aux_functions", modifiedOnly=FALSE)
simplex_plot(data_ts, embed_max, trap_name, overwrite = T)
simplex_plot(data_ts, embed_max, trap_name, overwrite = F)
i = 5
X <- as.data.frame(data_ts)[,i]
i = 16
X <- as.data.frame(data_ts)[,i]
s_map(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i-1,"emax"])
smap_output <- s_map(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i-1,"emax"])
smap_output <- s_map(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i-1,"emax"],silent = T)
par(mar = c(4, 4, 1, 1), mgp = c(2.5, 1, 0))
plot(smap_output$theta, smap_output$rho, type = "l", xlab = "Nonlinearity (theta)",
ylab = "Forecast Skill (rho)")
for (i in 2:ncol(data_ts)){
X <- as.data.frame(data_ts)[,i]
smap_output <- s_map(X, lib = c(1, NROW(X)), pred = c(1, NROW(X)), E = embed_max[i-1,"emax"], silent = T)
savename<-paste("output/",trap_name,"/smap_plots/theta_",colnames(data_ts)[i],".png",sep="")
png(savename, width = 800, height = 600)
par(mar = c(4, 4, 1, 1), mgp = c(2.5, 1, 0))
plot(smap_output$theta, smap_output$rho, type = "l", xlab = "Nonlinearity (theta)",
ylab = "Forecast Skill (rho)")
dev.off()
}
embed_max
